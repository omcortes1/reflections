1. About using diff: it was easy to be able to understand which lines were different because in the previous version there was not a bug. It helps, I guess, visualizing the changes. The command line is as follows: diff -u old_file.bla new_file.bla

2. How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Well, I could use the last version that was working or understand why I did a change. Maybe also recycle pieces of my old work in a new one...

3. What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

PROS for manually choosing commit time:
-You can do ti whenever it is logical
- you will not save code that does not work
- you will not have irrelevant commits, or commits that are to minimal

CONS for manually commit time:
- you can forget to do it

4. Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Well, I guess because git is more focused in software development while Google Docs is more a file storage.

5. How can you use the commands git log and git diff to view the history of files?

FirstI have to use git log to get the commit ID. Then I have to use the ID of two commits to see what is it different from them.

6. How might using version control make you more confident to make changes that could break something?

This is great because I can break it but find the spot where I messed up!!! Loving it...

7. Now that you have your workspace set up, what do you want to try using Git for?
I want to use the version control for my DSelector :)
